import rsx
import sql
import os
import regexp
import strings
import json

//
// Usage: history-exporter <browser_dir>
//
// Common browser directories:
//
// Zen flatpak (Linux)
// $HOME/.var/app/io.github.zen_browser.zen/.zen
//
// Firefox (Linux)
// $HOME/.mozilla/firefox
//
// Firefox flatpak (Linux)
// $HOME/.var/app/org.mozilla.firefox/.mozilla/firefox

// LibreWolf flatpak (Linux)
// $HOME/.var/app/io.gitlab.librewolf-community/.librewolf
//

func debug() {
  return os.getenv("RSX_DEBUG") != ""
}

args := os.args()
if len(args) < 2 {
  print("Usage: history-exporter <browser_dir>")
  os.exit(1)
}

browser_dir := args[1]
if !rsx.is_dir(browser_dir) {
  print("Invalid browser storage directory.")
  os.exit(1)
}

profiles_ini := filepath.join(browser_dir, "profiles.ini")
if !rsx.is_file(profiles_ini) {
  print("Browser profiles.ini not found.")
  os.exit(1)
}

func cleanup(dir) {
  rsx.debug('Cleaning up {dir}')
  if debug() {
    rsx.debug('Debug enabled, not removing temp dir {dir}')
    return
  }
  os.remove_all(dir)
}

func defaut_profile(browser_dir) {
  profile := ''
  rsx.grep(profiles_ini, 'Default=').each(func(line) {
    if !regexp.match(`Default(\s)*=(\s)*1`, line) {
      profile = strings.trim_space(line.split('=')[1])
    }
  })

  return profile
}

func main() {
  db_path := filepath.join(browser_dir, defaut_profile(browser_dir), 'places.sqlite')
  tmp_dir := os.mkdir_temp(os.temp_dir(), "fhexporter")
  defer cleanup(tmp_dir)

  tmp_db := filepath.join(tmp_dir, 'places.sqlite')
  cp(db_path, tmp_db)

  history := []
  db := sql.connect(tmp_db)
  res := db.query("SELECT p.id, p.url, p.title, p.visit_count, p.description, h.visit_date FROM moz_places p INNER JOIN moz_historyvisits h ON p.id = h.place_id").each(func(row) {
    id := row["id"]
    url := row["url"]
    title := row["title"]
    visits := row["visit_count"]
    description := row["description"]

    // Firefox stores timestamps in microseconds
    visit_date := time.unix(row["visit_date"]/1000000, 0)
    history.append({ id: id, url: url, title: title, visits: visits, description: description, visit_date: visit_date })
  })

  print(json.marshal(history))

}

main()
